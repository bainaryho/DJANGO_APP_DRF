version: '3'                      #Docker Compose 파일의 버전 3

services:
  lion-app:
    container_name: lion-app-dc
    build:
      context: lion_app
      dockerfile: Dockerfile
    image: lion-app
    ports:
      - 8000:8000
    volumes:
      - ./lion_app:/app
      - "staticfiles:/var/www/html/static"
    command:
      - /start
    env_file:
      - ./prod.env

  nginx: #실행하는 서비스 엔진엑스 컨테이너
    depends_on: #"nginx" 서비스가 실행되기 전에 "lion-app" 서비스가 먼저 실행되도록 의존성을 지정
      - lion-app
    container_name: lion-nginx-dc
    build:
      context: .
      dockerfile: Dockerfile.nginx_ubt
    image: lion-nginx
    ports:
      - "8888:80"                 #호스트의 8888번 포트와 컨테이너의 80번 포트를 연결하여 Nginx의 웹 서버를 호스트에서 접근
    volumes:
      - "staticfiles:/var/www/html/static" #"staticfiles" 볼륨을 "/var/www/html/static" 디렉토리와 연결하여 Nginx에서 정적 파일들에 접근

volumes: #공유 볼륨을 정의
  staticfiles:

#위의 설정 파일은 "lion-app" 서비스에는 Django 애플리케이션이,
#"nginx" 서비스에는 Nginx 웹 서버가 실행되도록 정의되어 있습니다.
#Docker Compose를 사용하여 이 설정 파일을 실행하면
#Django 애플리케이션과 Nginx 웹 서버가 함께 실행되고 연결됩니다.
#Django 애플리케이션을 Nginx 웹 서버를 통해 외부로 노출시키며,
#웹 애플리케이션을 배포할 수 있습니다.